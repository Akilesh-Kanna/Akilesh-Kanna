# -*- coding: utf-8 -*-
"""Chart your Insight.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18ObMld-ozsKDfmTtkwnZqLxMefAoX-ZV
"""

import streamlit as st
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np

# Load the dataset
file_path = "Chart_insight.csv"  # Update this path to your CSV file
main_df = pd.read_csv('Chart_Insight.csv')

# Streamlit title
st.title("Health Data Analysis Dashboard")
st.subheader("Exploring the relationship between health, lifestyle, and diseases")

# Sidebar for user input (Filters)
exercise_filter = st.sidebar.selectbox('Filter by Exercise Status:', main_df['Exercise'].unique())

# Filter the dataset based on user input
filtered_df = main_df[main_df['Exercise'] == exercise_filter]

# Group the data for the first visual (General Health vs Exercise)
grouped_exercise_health = filtered_df.groupby(['Exercise', 'General_Health']).size().reset_index(name='Count')

# Display the Grouped Bar Chart
st.subheader("Impact of Exercise on General Health")
plt.figure(figsize=(10, 6))
sns.barplot(data=grouped_exercise_health, x='Exercise', y='Count', hue='General_Health', palette='viridis')
plt.title("Impact of Exercise on General Health", fontsize=16)
plt.xlabel("Exercise Status")
plt.ylabel("Count of Individuals")
plt.tight_layout()
st.pyplot(plt)

# Additional visualizations (BMI Distribution by General Health)
st.subheader("BMI Distribution Across General Health Categories")
plt.figure(figsize=(10, 6))
sns.boxplot(data=main_df, x='General_Health', y='BMI', palette='coolwarm')
plt.title("BMI Distribution Across General Health", fontsize=16)
plt.tight_layout()
st.pyplot(plt)

# Impact of Smoking on General Health (Stacked Bar Chart)
st.subheader("Impact of Smoking on General Health")
smoking_health = main_df.groupby(['Smoking_History', 'General_Health']).size().reset_index(name='Count')
plt.figure(figsize=(10, 6))
sns.barplot(data=smoking_health, x='Smoking_History', y='Count', hue='General_Health', palette='magma')
plt.title("Impact of Smoking on General Health", fontsize=16)
plt.xlabel("Smoking History")
plt.ylabel("Count of Individuals")
plt.tight_layout()
st.pyplot(plt)

# Exercise vs Heart Disease (Grouped Bar Chart)
st.subheader("Exercise vs Heart Disease")
exercise_heart = main_df.groupby(['Exercise', 'Heart_Disease']).size().reset_index(name='Count')
plt.figure(figsize=(10, 6))
sns.barplot(data=exercise_heart, x='Exercise', y='Count', hue='Heart_Disease', palette='Blues')
plt.title("Exercise vs Heart Disease", fontsize=16)
plt.xlabel("Exercise Status")
plt.ylabel("Count of Individuals")
plt.tight_layout()
st.pyplot(plt)

# Correlation Heatmap (Numerical Data)
st.subheader("Correlation Heatmap")

# Convert 'Age_Category' to numerical representation for correlation
# Assuming 'Age_Category' has values like '70-74', '35-39', etc.
# We'll take the midpoint of each range, and handle '80+' separately.
age_mapping = {}
for age_range in main_df['Age_Category'].unique():
    if '-' in age_range:  # Handle ranges like '70-74'
        start

